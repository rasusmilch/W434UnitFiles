constants
begin
{
   For consistency, precise files begin with 'FILE_' whereas templates intended
   to be transformed into another string by calling StrReplace(); or
   archive_protocol(); begin with 'TMPL_'.
}
   FILE_JOB_WHITELIST = 'O:\Test Eng\Support_Files\W434\job_numbers_whitelist.ini';

end;

function check_job_whitelist(Debug: boolean = FALSE): string;
begin
   // Opens the job whitelist ini file and attempts to fetch the base filename
   // of the project from the file and any job numbers. If it is found, prompts
   // the operator for the job number and compares. Only on a valid match will
   // the test proceed.
   //
   // Returns TRUE if no job was found or entered job matched whitelist.

   AllowedTest = TRUE;

   ProjectFilename = ProjectGetFilename();

   if (Debug)
   begin
     UIWriteWarning(StrAdd('Job whitelist project filename: ', ProjectFilename));
   end;

   Handle = FileOpenIni(FILE_JOB_WHITELIST);

   if (Debug)
   begin
      UIWriteWarning(StrAdd('Job whitelist file handle: ', Handle));
   end;

   if (Handle == 0)
   begin
      UIErrorDialog('COULD NOT OPEN JOB WHITELIST FILE.<BR><BR>CONTACT TEST LAB.');
   end
   else
   begin
      MiscListFromString(ProjectFilename, PathParts, '\');
      BaseFileNameIndex = MiscGetListSize(PathParts);

      if (Debug)
      begin
         UIWriteWarning(StrAdd('Job whitelist base filename index: ', BaseFileNameIndex));
      end;

      MiscListFromString(PathParts[BaseFileNameIndex], RootFilenameList, '.');

      if (MiscGetListSize(RootFilenameList) == 2)
      begin
         BaseFileName = StrTrim(RootFilenameList[1]);
      end
      else
      begin
         UIErrorDialog('Job whitelist file configuration error!<BR><BR>CONTACT TEST LAB.');
      end;

      if (Debug)
      begin
         UIWriteWarning(StrAdd('Job whitelist base filename: ', BaseFileName));
      end;

      JobWhitelist = FileGetIni(Handle, 'Whitelist', BaseFileName, 'NULL');

      if (Debug)
      begin
         UIWriteWarning(StrAdd('Jobs in whitelist: ', JobWhitelist));
      end;

   end;

   FileCloseIni(Handle);

   if (StrCompare(JobWhitelist, 'NULL') <> 0)
   begin
      // We found a match, prompt operator
      InputResult = '';
      Button = UIEditDialog('Job number', 'Enter the current job number', FALSE, TRUE, InputResult);
      if (Button == DIALOGRESULT_Ok)
      begin
         if (Debug)
         begin
            UIWriteWarning(StrAdd('Job number: ', InputResult));
         end;

         InputJobLower = StrLowerCase(StrTrim(InputResult));


         Count = MiscListFromString(JobWhitelist, ListJobs, ',');

         if (Debug)
         begin
            UIWriteWarning(StrAdd('Number of found jobs in whitelist: ', Count));
         end;

         JobFound = FALSE;

         for Index = 1 to Count do
         begin
            JobLower = StrLowerCase(StrTrim(ListJobs[Index]));

            if (StrCompare(InputJobLower, JobLower) == 0)
            begin
               JobFound = TRUE;

               if (Debug)
               begin
                  UIWriteWarning(StrAdd('Job found: ', InputJobLower));
               end;
            end;
         end;

         if (JobFound == FALSE)
         begin
            UIWriteError(StrAdd(InputJobLower, ' did not match whitelisted job list. Check job number or contact test lab.'));
            UIErrorDialog(StrAdd(InputJobLower, ' did not match whitelisted job list<BR>Check job number or contact test lab.'));
            AllowedTest = FALSE;
         end;
      end
      else
      begin
         UIWriteError('Operator did not enter a required job number');
         AllowedTest = FALSE;
      end;

   end;

   Result = AllowedTest;

end;